package testing;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

@RunWith(MockitoJUnitRunner.class)
public class MokitoTest {
	
	@Mock
	private DatabaseConnector databaseConnector;
	
	@InjectMocks
	private QueryClass queryClass;
	
	@Test
	public void testCreate() {
        QueryClass queryClass = new QueryClass(databaseConnector);
    }
	
	@Test
	public void test() {
	    Customer mockedCustomer = mock(Customer.class);
	    when(mockedCustomer.getUniqueId()).thenReturn(23);
	    assertEquals(mockedCustomer.getUniqueId(), 23);
	}
	
	@Test
	public void test2() {
	    Customer mockedCustomer = mock(Customer.class);
	    doReturn(23).when(mockedCustomer).getUniqueId();
	    assertEquals(mockedCustomer.getUniqueId(), 23);
	}
	
	@Test
	public void test3() {
	    Customer mockedCustomer = mock(Customer.class);
	    when(mockedCustomer.getUniqueId()).thenReturn(23);
	    int id = mockedCustomer.getUniqueId();
	    verify(mockedCustomer).getUniqueId();
	}

}
